#pragma once
#ifdef SIMULATION
#include "Arduino_Mock.h"
#else
#include <avr/pgmspace.h>
#endif

#include "../Image.h"

namespace MrSplat_data {
	const uint16_t arcs[] PROGMEM {
		  0x0000, 0x1331, 0x2998, 0xE401, 0xE4CC, 0xE599
		, 0x0000, 0x1811, 0x3C88, 0x3F71, 0x402C, 0xD151, 0xFB9C
		, 0x0000, 0x05EE, 0x0D28, 0x1AF9, 0x43C8, 0xC80D, 0xF968
		, 0x0000, 0x009A, 0x1294, 0x1B95, 0x4AF0, 0xC23D, 0xF798
		, 0x0002, 0x141C, 0x1BF1, 0x4F5C, 0xBF29, 0xF70C, 0xFDC2
		, 0x0002, 0x1528, 0x1BDD, 0x5210, 0xBCE5, 0xF738, 0xFD6A
		, 0x0002, 0x1590, 0x1B51, 0x23F4, 0x30E5, 0x3160, 0x31D9, 0x545C, 0xBAF5, 0xDD00, 0xEEBD, 0xF7D8, 0xFD1E
		, 0x0002, 0x14D4, 0x1A45, 0x2028, 0x35E9, 0x55A0, 0xBA39, 0xD894, 0xF269, 0xF8C0, 0xFE32
		, 0x0002, 0x1318, 0x1979, 0x1DB4, 0x39BD, 0x5698, 0xB985, 0xD5F8, 0xF4F5, 0xFA0C
		, 0x0000, 0x0266, 0x1064, 0x1801, 0x1C00, 0x3B99, 0x56CC, 0xB999, 0xD400, 0xF601, 0xFB98
		, 0x0000, 0x0802, 0x08C0, 0x0926, 0x0984, 0x09E6, 0x0A48, 0x1619, 0x1B6C, 0x3CF1, 0x5678, 0xB9E5, 0xD248, 0xF6D9, 0xFCF0
		, 0x0000, 0x1439, 0x1A58, 0x3ED1, 0x55EC, 0xBB09, 0xD0B0, 0xF755, 0xFEE8
		, 0x0001, 0x0314, 0x1019, 0x1A08, 0x406D, 0x54A4, 0xBC7D, 0xCEFC, 0xF7C5
		, 0x0001, 0x0348, 0x0EC9, 0x19F4, 0x4261, 0x52D0, 0xBE45, 0xCCB8, 0xF7C9
		, 0x0001, 0x00A0, 0x1191, 0x19B8, 0x4465, 0x5050, 0xC1E1, 0xCA08, 0xF7D5
		, 0x0000, 0x132D, 0x19C4, 0xF7E9, 0xFE30
		, 0x0000, 0x1489, 0x19BC, 0xF79D, 0xFD18
		, 0x0000, 0x1559, 0x1A10, 0xF765, 0xFC1C
		, 0x0000, 0x0665, 0x0B30, 0x161D, 0x1AA0, 0xF6F1, 0xFBBC
		, 0x0000, 0x0359, 0x0E70, 0x1671, 0x1B18, 0xF671, 0xFB58
		, 0x0000, 0x01FD, 0x0FE8, 0x16DD, 0x1B94, 0xF5CD, 0xFB04
		, 0x0000, 0x00F5, 0x10C4, 0x1701, 0x1C48, 0xF535, 0xFAB8
		, 0x0000, 0x0075, 0x113C, 0x170D, 0x1CE0, 0xF459, 0xFAA4
		, 0x0001, 0x118C, 0x1731, 0x1DB8, 0xF39D, 0xFA5C
		, 0x0001, 0x11A8, 0x1755, 0x1E84, 0xF2E9, 0xFA8C, 0xFF91
		, 0x0001, 0x119C, 0x1759, 0x1F34, 0xF231, 0xFA78, 0xFF91
		, 0x0001, 0x117C, 0x1775, 0x1FE4, 0xF161, 0xFA70
		, 0x0000, 0x0065, 0x112C, 0x1761, 0x205C, 0xF0CD, 0xFA64
		, 0x0000, 0x0129, 0x1090, 0x1795, 0x20F0, 0xF065, 0xFA24
		, 0x0000, 0x01E5, 0x0F8C, 0x17B5, 0x212C, 0xF041, 0xF9EC
		, 0x0000, 0x02F1, 0x0E90, 0x17F9, 0x2130, 0xF051, 0xF988
		, 0x0000, 0x04B1, 0x0CFC, 0x1889, 0x20D4, 0xF0D9, 0xF924
		, 0x0000, 0x1921, 0x2080, 0xF195, 0xF814
		, 0x0000, 0x1A5D, 0x1F28, 0xF355, 0xF694
		, 0x0000
		, 0x0000
	}; // 520 bytes

	const uint16_t row_ends[] PROGMEM {
		0x0005, 0x000C, 0x0013, 0x001A, 0x0021, 0x0028, 0x0035, 0x0040, 0x004A, 0x0055, 0x0064, 0x006D, 0x0076, 0x007F, 0x0088, 0x008D, 0x0092, 0x0097, 0x009E, 0x00A5, 0x00AC, 0x00B3, 0x00BA, 0x00C0, 0x00C7, 0x00CE, 0x00D4, 0x00DB, 0x00E2, 0x00E9, 0x00F0, 0x00F7, 0x00FC, 0x0101, 0x0102, 0x0103
	}; // 72 bytes

	const uint32_t colors[] PROGMEM {
		0x00000000, 0x0000FFFF, 0x00FF9900
	}; // 12 bytes
}

class MrSplat : public Image {
protected:
	inline uint16_t get_arc(uint16_t i) override {
		return pgm_read_word(&MrSplat_data::arcs[i]);
	}

	inline uint16_t get_row_end(uint8_t row_index) override {
		return pgm_read_word(&MrSplat_data::row_ends[row_index]);
	}

protected:
	const uint32_t angle_mask = 0xFFFC;
	const uint32_t color_mask = 0x0003;

	inline uint16_t get_angle(uint16_t arc) override {
		return arc & angle_mask;
	}

	inline uint32_t get_color(uint16_t arc) override {
		return pgm_read_dword(&MrSplat_data::colors[arc & color_mask]);
	}
};
