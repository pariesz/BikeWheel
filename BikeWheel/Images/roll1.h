#pragma once
#ifdef SIMULATION
#include "Arduino_Mock.h"
#else
#include <avr/pgmspace.h>
#endif

#include "../Image.h"

namespace roll1_data {
	const uint16_t arcs[] PROGMEM {
		  0x0000, 0xE332, 0xE599, 0xEE62, 0xEF31, 0xF002, 0xF4C8
		, 0x0002, 0x02E8, 0xDCFA, 0xDE71, 0xFAE2
		, 0x0002, 0x0738, 0xDA7A, 0xDB21, 0xE7A2, 0xEAF1, 0xFA12
		, 0x0002, 0x0730, 0xD86A, 0xD901, 0xE3D2, 0xE468, 0xED69, 0xFBCA
		, 0x0001, 0x0358, 0xD6A2, 0xD731, 0xE408, 0xED89, 0xF9DB, 0xFCA1
		, 0x0003, 0x0318, 0xD52A, 0xD5A9, 0xE4A2, 0xE5A8, 0xEB5A, 0xECE1, 0xF94B
		, 0x0003, 0x0262, 0x02E0, 0xD08A, 0xD369, 0xF853
		, 0x0003, 0x0158, 0xCDB2, 0xD239, 0xF6F3, 0xF9AA, 0xFA18, 0xFEA1, 0xFF1B
		, 0x0000, 0xCBC2, 0xD149, 0xF563, 0xF711, 0xF780
		, 0x0000, 0xCACA, 0xD399, 0xF39B, 0xF730
		, 0x0000, 0xCB6A, 0xD619, 0xF123, 0xF801, 0xFAAA, 0xFB08
		, 0x0000, 0xCC02, 0xD789, 0xEBC3, 0xF8C2, 0xF920
		, 0x0000, 0xCB3A, 0xD7E1, 0xEA6B, 0xF609, 0xF662, 0xF6B8
		, 0x0000, 0xCAC2, 0xD641, 0xE953, 0xF382, 0xF428, 0xF722, 0xFA68
		, 0x0000, 0xCB4A, 0xD461, 0xE8CB, 0xF191, 0xF1E0, 0xF692, 0xFAF8
		, 0x0000, 0xD18A, 0xD1D1, 0xE853, 0xF069, 0xF102, 0xFA98
		, 0x0000, 0x04A2, 0x05C9, 0x0612, 0x0659, 0x06F2, 0x11A0, 0xD249, 0xE76B, 0xEF81, 0xF012, 0xF9E8
		, 0x0001, 0x0163, 0x06E9, 0x077A, 0x1630, 0xD281, 0xE5A3, 0xEF11, 0xEF5A, 0xF1D8, 0xF4E2, 0xF910, 0xFDC2, 0xFE51
		, 0x0003, 0x07B9, 0x090A, 0x17F8, 0xD2FA, 0xD339, 0xE44B, 0xEE69, 0xEEAA, 0xEF30, 0xF37A, 0xF841, 0xFB33
		, 0x0003, 0x0989, 0x0B1A, 0x0B58, 0x152A, 0x17B8, 0xD399, 0xE31B, 0xEE71, 0xEEB2, 0xEEF0, 0xF212, 0xF671, 0xF7BB
		, 0x0001, 0x04FB, 0x0AE9, 0x0B28, 0xD442, 0xD481, 0xE22B, 0xF291, 0xF5CB, 0xFC81
		, 0x0001, 0x0583, 0x0B02, 0x0B40, 0xD512, 0xD551, 0xE18B, 0xE8F9, 0xF123, 0xF9C1
		, 0x0001, 0x060B, 0x0AF2, 0x0C58, 0xD612, 0xD649, 0xE103, 0xE801, 0xF27B, 0xF8C1
		, 0x0001, 0x06C3, 0x0ACA, 0x0D48, 0xD702, 0xD739, 0xE2F3, 0xE569, 0xE5AB, 0xE5E1, 0xF2B3, 0xF859
		, 0x0001, 0x076B, 0x0A72, 0x0DF0, 0xD7E2, 0xD819, 0xF20B, 0xF821
		, 0x0001, 0x0843, 0x09C1, 0x09F8, 0x0A32, 0x0E68, 0xD8B9, 0xF0B3, 0xF7E9
		, 0x0001, 0x0908, 0x0B52, 0x0ED0, 0xD982, 0xD9B9, 0xEEEB, 0xF791
		, 0x0001, 0x07F8, 0x0BFA, 0x0F30, 0xDA6A, 0xDAA1, 0xED33, 0xF731
		, 0x0001, 0x066A, 0x06A0, 0x0CAA, 0x0F60, 0xDB89, 0xE8CB, 0xF6D1
		, 0x0001, 0x051A, 0x0548, 0x0CB2, 0x0F58, 0xDC5A, 0xDC89, 0xE87B, 0xF561
		, 0x0001, 0x03B2, 0x0408, 0x0C5A, 0x0F48, 0xDD82, 0xDDB1, 0xE8C3, 0xF3D1
		, 0x0001, 0x025A, 0x02B0, 0x0C12, 0x0EC8, 0xDE9A, 0xDEC9, 0xEA8B, 0xF1B9
		, 0x0001, 0x013A, 0x0160, 0xDFDA, 0xE031, 0xEB9B, 0xEFD1
		, 0x0000, 0xE1B2, 0xE209, 0xFF22, 0xFF78
		, 0x0000, 0xE3FA, 0xE4A1, 0xFCA2, 0xFD20
		, 0x0000, 0xE6CA, 0xE771, 0xE79A, 0xE7C1, 0xFA6A, 0xFB68
	}; // 600 bytes

	const uint16_t row_ends[] PROGMEM {		
		0x0006, 0x000B, 0x0012, 0x001A, 0x0022, 0x002B, 0x0031, 0x003A, 
		0x0040, 0x0045, 0x004C, 0x0052, 0x0059, 0x0061, 0x0069, 0x0070, 
		0x007C, 0x008A, 0x0097, 0x00A5, 0x00AF, 0x00B9, 0x00C3, 0x00CF, 
		0x00D7, 0x00E0, 0x00E8, 0x00F0, 0x00F8, 0x0101, 0x010A, 0x0113, 
		0x011A, 0x011F, 0x0124, 0x012B
	}; // 72 bytes

	const uint32_t colors[] PROGMEM {		
		0x00000000, 0x00FFCC00, 0x00FF5555, 0x00FFFFFF
	}; // 16 bytes
}

class roll1 : public Image {
protected:
	inline uint16_t get_arc(uint16_t i) override {
		return pgm_read_word(&roll1_data::arcs[i]);
	}

	inline uint16_t get_row_end(uint8_t row_index) override {
		return pgm_read_word(&roll1_data::row_ends[row_index]);
	}

protected:
	const uint16_t angle_mask = 0xFFF8;
	const uint16_t color_mask = 0x0007;

	inline uint16_t get_angle(uint16_t arc) override {
		return arc & angle_mask;
	}

	inline uint32_t get_color(uint16_t arc) override {
		return pgm_read_dword(&(roll1_data::colors[arc & color_mask]));
	}
};
